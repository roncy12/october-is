{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","compareProducts","context","urls","arrangeFocusOnSortBy","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","setTimeout","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","tap","announceInputErrorMessage","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","updateCounterNav","counter","$link","urlContext","compare","join","compareCounter","$compareLink","$checked","map","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","addEventListener","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","collapsedFacets","collapsedFacetItems","$modal","ModalEvents","target","setupFocusTrap","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","val","toLowerCase","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","Object","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport { announceInputErrorMessage } from './common/utils/form-utils';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/utils/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nconst leftArrowKey = 37;\r\nconst rightArrowKey = 39;\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts(navigate = true) {\r\n        this.$productListingContainer.removeClass('u-hidden');\r\n        this.$facetedSearchContainer.removeClass('u-hidden');\r\n        this.$contentResultsContainer.addClass('u-hidden');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        this.activateTab($('[data-product-results-toggle]'));\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-product-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent(navigate = true) {\r\n        this.$contentResultsContainer.removeClass('u-hidden');\r\n        this.$productListingContainer.addClass('u-hidden');\r\n        this.$facetedSearchContainer.addClass('u-hidden');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        this.activateTab($('[data-content-results-toggle]'));\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-content-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    activateTab($tabToActivate) {\r\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\r\n\r\n        $tabsCollection.each((idx, tab) => {\r\n            const $tab = $(tab);\r\n\r\n            if ($tab.is($tabToActivate)) {\r\n                $tab.removeAttr('tabindex');\r\n                $tab.attr('aria-selected', true);\r\n                return;\r\n            }\r\n\r\n            $tab.attr('tabindex', '-1');\r\n            $tab.attr('aria-selected', false);\r\n        });\r\n    }\r\n\r\n    onTabChangeWithArrows(event) {\r\n        const eventKey = event.which;\r\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\r\n            || eventKey === rightArrowKey;\r\n        if (!isLeftOrRightArrowKeydown) return;\r\n\r\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\r\n\r\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\r\n        if (isActiveElementNotTab) return;\r\n\r\n        const $activeTab = $(`#${document.activeElement.id}`);\r\n        const activeTabIdx = $tabsCollection.index($activeTab);\r\n        const lastTabIdx = $tabsCollection.length - 1;\r\n\r\n        let nextTabIdx;\r\n        switch (eventKey) {\r\n        case leftArrowKey:\r\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\r\n            break;\r\n        case rightArrowKey:\r\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\r\n            break;\r\n        default: break;\r\n        }\r\n\r\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n        this.arrangeFocusOnSortBy();\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent(false);\r\n        } else {\r\n            this.showProducts(false);\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            $('[data-search-aria-message]').removeClass('u-hidden');\r\n        }, 100);\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        // eslint-disable-next-line object-curly-newline\r\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $contentListingContainer = $('#search-results-content');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const $contentCount = $('#search-results-content-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                contentListing: 'search/content-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n                contentCount: 'search/content-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $searchHeading.html(content.heading);\r\n\r\n            const url = Url.parse(window.location.href, true);\r\n            if (url.query.section === 'content') {\r\n                $contentListingContainer.html(content.contentListing);\r\n                $contentCount.html(content.contentCount);\r\n                this.showContent(false);\r\n            } else {\r\n                $productListingContainer.html(content.productListing);\r\n                $facetedSearchContainer.html(content.sidebar);\r\n                $searchCount.html(content.productCount);\r\n                this.showProducts(false);\r\n            }\r\n\r\n            $('body').triggerHandler('compareReset');\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        }, {\r\n            validationErrorMessages: {\r\n                onMinPriceError,\r\n                onMaxPriceError,\r\n                minPriceNotEntered,\r\n                maxPriceNotEntered,\r\n                onInvalidPrice,\r\n            },\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n            tap: announceInputErrorMessage,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let compareCounter = [];\r\n\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    $('body').on('compareReset', () => {\r\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\r\n        updateCounterNav(compareCounter, $compareLink, urlContext);\r\n    });\r\n\r\n    $('body').triggerHandler('compareReset');\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n","import PageManager from './page-manager';\r\nimport urlUtils from './common/utils/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n\r\n        window.addEventListener('beforeunload', () => {\r\n            if (document.activeElement.id === 'sort') {\r\n                window.localStorage.setItem('sortByStatus', 'selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    arrangeFocusOnSortBy() {\r\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\r\n\r\n        if (window.localStorage.getItem('sortByStatus')) {\r\n            $sortBySelector.focus();\r\n            window.localStorage.removeItem('sortByStatus');\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event, currentTarget) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './utils/url-utils';\r\nimport modalFactory, { ModalEvents } from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './utils/form-utils';\r\nimport nod from './nod';\r\n\r\n\r\nconst defaultOptions = {\r\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n    blockerSelector: '#facetedSearch .blocker',\r\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n    componentSelector: '#facetedSearch-navList',\r\n    facetNavListSelector: '#facetedSearch .navList',\r\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n    priceRangeFormSelector: '#facet-range-form',\r\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n    modal: modalFactory('#modal')[0],\r\n    modalOpen: false,\r\n};\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        if (this.options.modal) {\r\n            this.options.modal.$modal.on(ModalEvents.opened, event => {\r\n                const $filterItems = $(event.target).find('#facetedSearch-filterItems');\r\n                if ($filterItems.length) {\r\n                    this.options.modal.setupFocusTrap();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(window).on('popstate', this.onPopState);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(window).off('popstate', this.onPopState);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event, currentTarget) {\r\n        const $link = $(currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event, currentTarget) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onRangeSubmit(event, currentTarget) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href, true);\r\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\r\n        queryParams = urlUtils.parseQueryParams(queryParams);\r\n\r\n        for (const key in queryParams) {\r\n            if (queryParams.hasOwnProperty(key)) {\r\n                url.query[key] = queryParams[key];\r\n            }\r\n        }\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n\r\n    onPopState() {\r\n        const currentUrl = window.location.href;\r\n        const searchParams = new URLSearchParams(currentUrl);\r\n        // If searchParams does not contain a page value then modify url query string to have page=1\r\n        if (!searchParams.has('page')) {\r\n            const linkUrl = $('.pagination-link').attr('href');\r\n            const re = /page=[0-9]+/i;\r\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\r\n            window.history.replaceState({}, document.title, updatedLinkUrl);\r\n        }\r\n        $(window).trigger('statechange');\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}